/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/js/main.js":
/*!*******************************!*\
  !*** ./src/assets/js/main.js ***!
  \*******************************/
/***/ (function() {

eval("document.addEventListener(\"DOMContentLoaded\", () => {\r\n  const galleryBtnsWrapper = document.querySelector(\".gallery__btns-wrapper\")\r\n  const galleryBtnMore = document.querySelector(\".gallery__btn-more\")\r\n  const galleryBtnHide = document.querySelector(\".gallery__btn-hide\")\r\n  const galleryGrid = document.querySelectorAll(\".gallery__grid\")\r\n  \r\n  let count1 = 1\r\n  if (count1 < galleryGrid.length) {\r\n    galleryBtnMore.addEventListener('click', () => {\r\n      galleryGrid[count1].style.display = \"grid\";\r\n      count1++;\r\n      if (galleryGrid.length === count1) {\r\n        galleryBtnMore.style.display = \"none\"\r\n        galleryBtnHide.style.display = \"block\"\r\n      }\r\n    });\r\n  \r\n    galleryBtnHide.addEventListener('click', () => {\r\n      galleryGrid.forEach(item => {\r\n        item.style.display = \"\"\r\n      })\r\n      galleryBtnMore.style.display = \"\"\r\n      galleryBtnHide.style.display = \"\"\r\n      count1 = 1\r\n    })\r\n  } else {\r\n    galleryBtnsWrapper.style.display = \"none\"\r\n  }\r\n\r\n  const certificatesBtnsWrapper = document.querySelector(\".certificates__btns-wrapper\")\r\n  const certificatesBtnMore = document.querySelector(\".certificates__btn-more\")\r\n  const certificatesBtnHide = document.querySelector(\".certificates__btn-hide\")\r\n  const certificatesGrid = document.querySelectorAll(\".certificates__grid\")\r\n\r\n  let count2\r\n\r\n  if (window.innerWidth <= 600) {\r\n    count2 = 1;\r\n  } else {\r\n    count2 = 2;\r\n  }\r\n\r\n  let initialCount2 = count2\r\n\r\n  window.addEventListener(\"resize\", () => {\r\n    if (window.innerWidth <= 600) {\r\n      count2 = 1;\r\n    } else {\r\n      count2 = 2;\r\n    }\r\n\r\n    initialCount2 = count2\r\n\r\n    if (count2 < certificatesGrid.length) {\r\n      certificatesBtnsWrapper.style.display = \"\"\r\n    } else {\r\n      certificatesBtnsWrapper.style.display = \"none\"\r\n    }\r\n  })\r\n\r\n  if (count2 < certificatesGrid.length) {\r\n    certificatesBtnsWrapper.style.display = \"\"\r\n  } else {\r\n    certificatesBtnsWrapper.style.display = \"none\"\r\n  }\r\n\r\n  certificatesBtnMore.addEventListener('click', () => {\r\n    certificatesGrid[count2].style.display = \"grid\";\r\n    count2++;\r\n    if (certificatesGrid.length === count2) {\r\n      certificatesBtnMore.style.display = \"none\"\r\n      certificatesBtnHide.style.display = \"block\"\r\n    }\r\n  });\r\n\r\n  certificatesBtnHide.addEventListener('click', () => {\r\n    certificatesGrid.forEach(item => {\r\n      item.style.display = \"\"\r\n    })\r\n    certificatesBtnMore.style.display = \"\"\r\n    certificatesBtnHide.style.display = \"\"\r\n    count2 = initialCount2\r\n  })\r\n})\r\n\r\nconst swiper1 = new Swiper('.banner__swiper', {\r\n  effect: 'fade',\r\n  slidesPerView: 1,\r\n  loop: true,\r\n  simulateTouch: false,\r\n  autoplay: {\r\n    delay: 4000,\r\n  },\r\n  speed: 1000,\r\n  pagination: {\r\n    el: \".banner__swiper-pagination\",\r\n    clickable: true,\r\n    renderBullet: function (index, className) {\r\n      return `<span class=\"${className}\"></span>`;\r\n    },\r\n  },\r\n});\r\n\r\nconst swiper2 = new Swiper('.testimonial__swiper', {\r\n  slidesPerView: 1.7,\r\n  spaceBetween: 11,\r\n  simulateTouch: false,\r\n  autoplay: {\r\n    delay: 5000,\r\n  },\r\n  pagination: {\r\n    el: \".testimonial__swiper-pagination\",\r\n    clickable: true,\r\n    renderBullet: function (index, className) {\r\n      return `<span class=\"${className}\"></span>`;\r\n    },\r\n  },\r\n  navigation: {\r\n    nextEl: \".testimonial__swiper-button-next\",\r\n    prevEl: \".testimonial__swiper-button-prev\",\r\n  },\r\n  breakpoints: {\r\n    1100: {\r\n      slidesPerView: 5,\r\n      spaceBetween: 24,\r\n    },\r\n    900: {\r\n      slidesPerView: 4,\r\n    },\r\n    600: {\r\n      slidesPerView: 3,\r\n      spaceBetween: 15,\r\n    },\r\n  },\r\n});\r\n\r\nconst overflowToggle = (arg) => {\r\n  if (arg) {\r\n    document.documentElement.style.overflow = \"hidden auto\"\r\n    document.body.style.overflow = \"hidden auto\"\r\n  } else {\r\n    document.documentElement.style.overflow = \"hidden\"\r\n    document.body.style.overflow = \"hidden\"\r\n  }\r\n}\r\n\r\nconst popUpOpen = (window, wrapper, overlay, delay) => {\r\n  overflowToggle(false)\r\n  window.style.display = \"block\"\r\n\r\n  setTimeout(() => {\r\n    overlay.style.opacity = \".5\"\r\n    wrapper.style.opacity = \"1\"\r\n    wrapper.style.top = \"50%\"\r\n  },0)\r\n\r\n  if (delay) {\r\n    setTimeout(() => {\r\n      popUpClose(window, wrapper, overlay)\r\n    }, delay)\r\n  }\r\n}\r\n\r\nconst popUpClose = (window, wrapper, overlay) => {\r\n  setTimeout(() => {\r\n    window.style.display = \"\"\r\n  }, 300)\r\n  overlay.style.opacity = \"\"\r\n  wrapper.style.opacity = \"\"\r\n  wrapper.style.top = \"\"\r\n\r\n  overflowToggle(true)\r\n}\r\n\r\nconst setPopUpVisibility = (visibility, window, wrapper, overlay, delay) => {\r\n  if (visibility) {\r\n    popUpOpen(window, wrapper, overlay, delay)\r\n  } else {\r\n    popUpClose(window, wrapper, overlay)\r\n  }\r\n}\r\n\r\nconst popupView = document.querySelector(\".popup-view\")\r\nconst popupViewImg = document.querySelector(\".popup-view__img\")\r\nconst overlayView = document.querySelector(\".popup-view__overlay\")\r\n\r\ndocument.querySelectorAll(\".gallery__grid-item\").forEach(item => {\r\n  item.addEventListener(\"click\", () => {\r\n    const imgSrs = item.firstElementChild.src\r\n    const img = document.querySelector(\".popup-view__img\")\r\n    img.src = imgSrs.replace(\".jpg\", \"-large.jpg\")\r\n    setPopUpVisibility(true, popupView, popupViewImg, overlayView)\r\n  })\r\n})\r\n\r\ndocument.querySelectorAll(\".certificates__grid-item\").forEach(item => {\r\n  item.addEventListener(\"click\", () => {\r\n    const imgSrs = item.firstElementChild.src\r\n    const img = document.querySelector(\".popup-view__img\")\r\n    img.src = imgSrs.replace(\".jpg\", \"-large.jpg\")\r\n    setPopUpVisibility(true, popupView, popupViewImg, overlayView)\r\n  })\r\n})\r\n\r\ndocument.querySelectorAll(\".testimonial__img-wrapper\").forEach(item => {\r\n  item.addEventListener(\"click\", () => {\r\n    const imgSrs = item.firstElementChild.src\r\n    const img = document.querySelector(\".popup-view__img\")\r\n    img.src = imgSrs.replace(\".jpg\", \"-large.jpg\")\r\n    setPopUpVisibility(true, popupView, popupViewImg, overlayView)\r\n  })\r\n})\r\n\r\ndocument.querySelector(\".popup-view__close\").addEventListener(\"click\", () => setPopUpVisibility(false, popupView, popupViewImg, overlayView))\r\noverlayView.addEventListener(\"click\", () => setPopUpVisibility(false, popupView, popupViewImg, overlayView))\r\n\r\nconst popupCall = document.querySelector(\".popup-call\")\r\nconst popupCallWrapper = document.querySelector(\".popup-call__wrapper\")\r\nconst overlayCall = document.querySelector(\".popup-call__overlay\")\r\n\r\ndocument.querySelector(\".header__controls-top-phones-btn\").addEventListener(\"click\", () => setPopUpVisibility(true, popupCall, popupCallWrapper, overlayCall))\r\ndocument.querySelector(\".popup-call__close\").addEventListener(\"click\", () => setPopUpVisibility(false, popupCall, popupCallWrapper, overlayView))\r\noverlayCall.addEventListener(\"click\", () => setPopUpVisibility(false, popupCall, popupCallWrapper, overlayView))\r\n\r\n\r\nconst burger = document.querySelector(\".burger\")\r\nconst burgerMenu = document.querySelector(\".burger-menu\")\r\n\r\nconst burgerMenuClose = () => {\r\n  burgerMenu.style.left = \"\"\r\n\r\n  setTimeout(() => {\r\n    burger.style.display = \"\"\r\n  }, 500);\r\n  \r\n  overflowToggle(true)\r\n}\r\n\r\nconst burgerMenuOpen = () => {\r\n  burger.style.display = \"block\"\r\n\r\n  setTimeout(() => {\r\n    burgerMenu.style.left = \"0\"\r\n  }, 0);\r\n\r\n  overflowToggle(false)\r\n}\r\n\r\nwindow.addEventListener('resize',(e) => {\r\n  const width = document.body.clientWidth;\r\n  if (width > 1300) {\r\n    burgerMenuClose()\r\n  }\r\n});\r\n\r\ndocument.querySelector(\".header__burger-btn\").addEventListener(\"click\", burgerMenuOpen)\r\ndocument.querySelector(\".header__burger-close-btn\").addEventListener(\"click\", burgerMenuClose)\r\ndocument.querySelectorAll(\".burger .header__nav-list-link\").forEach(item => {\r\n  item.addEventListener(\"click\", burgerMenuClose)\r\n})\r\ndocument.querySelector(\".header__mobile-call\").addEventListener(\"click\", () => setPopUpVisibility(true, popupCall, popupCallWrapper, overlayCall))\r\ndocument.querySelector(\".burger__mobile-call\").addEventListener(\"click\", () => {\r\n  burgerMenuClose()\r\n  setPopUpVisibility(true, popupCall, popupCallWrapper, overlayCall)\r\n})\r\ndocument.querySelector(\".burger-call-btn\").addEventListener(\"click\", () => {\r\n  burgerMenuClose();\r\n  setPopUpVisibility(true, popupCall, popupCallWrapper, overlayCall)\r\n})\r\n\r\nconst popupThanks = document.querySelector(\".popup-thanks\")\r\nconst popupThanksWrapper = document.querySelector(\".popup-thanks__wrapper\")\r\nconst overlayThanks = document.querySelector(\".popup-thanks__overlay\")\r\n\r\nconst name1Error = document.querySelector('.question-form__name1-error')\r\nconst tel1Error = document.querySelector('.question-form__tel1-error')\r\nconst checkbox1Error = document.querySelector(\".question-form__checkbox1-error\")\r\nconst name2Error = document.querySelector('.question-form__name2-error')\r\nconst tel2Error = document.querySelector('.question-form__tel2-error')\r\nconst checkbox2Error = document.querySelector(\".question-form__checkbox2-error\")\r\n\r\nconst name1 = document.getElementById(\"name1\")\r\nconst tel1 = document.getElementById(\"tel1\")\r\nconst checkbox1 = document.getElementById(\"personalData1\")\r\nconst name2 = document.getElementById(\"name2\")\r\nconst tel2 = document.getElementById(\"tel2\")\r\nconst checkbox2 = document.getElementById(\"personalData2\")\r\n\r\nconst telReg = /^[\\d\\+][\\d\\(\\)\\ -]{4,14}\\d$/\r\n\r\nconst questionSubmit = document.getElementById(\"question-submit\")\r\nconst callSubmit = document.getElementById(\"call-submit\")\r\n\r\nquestionSubmit.addEventListener(\"click\", function(e) {\r\n  if (name1Error.textContent.length === 0 && tel1Error.textContent.length === 0 && name1.value.length > 0 && tel1.value.length > 0 && checkbox1.checked && telReg.test(tel1.value)) {\r\n    setPopUpVisibility(true, popupThanks, popupThanksWrapper, overlayThanks, 3000)\r\n  } else {\r\n    onEmptyInputBlur(name1, name1Error)\r\n    onEmptyInputBlur(tel1, tel1Error)\r\n    onCheckboxChange(checkbox1, checkbox1Error)\r\n    this.disabled=true;\r\n    setTimeout(()=>{\r\n      this.disabled=false;\r\n    },0)\r\n  }\r\n})\r\n\r\ncallSubmit.addEventListener(\"click\", function(e) {\r\n  if (name2Error.textContent.length === 0 && tel2Error.textContent.length === 0 && name2.value.length > 0 && tel2.value.length > 0 && checkbox2.checked && telReg.test(tel2.value)) {\r\n    setPopUpVisibility(false, popupCall, popupCallWrapper, overlayCall)\r\n    setPopUpVisibility(true, popupThanks, popupThanksWrapper, overlayThanks, 3000)\r\n  } else {\r\n    onEmptyInputBlur(name2, name2Error)\r\n    onEmptyInputBlur(tel2, tel2Error)\r\n    onCheckboxChange(checkbox2, checkbox2Error)\r\n    this.disabled=true;\r\n    setTimeout(()=>{\r\n      this.disabled=false;\r\n    },0)\r\n  }\r\n})\r\n\r\nconst inputStyles = (status, input, text, errText) => {\r\n  if (status) {\r\n    input.style.border = \"1px solid #FF0000\"\r\n    text.style.display = \"block\"\r\n    text.textContent = errText\r\n  } else {\r\n    text.textContent = \"\"\r\n    input.style.border = \"\"\r\n    text.style.display = \"\"\r\n  }\r\n}\r\n\r\nconst onEmptyInputBlur = (input, text) => {\r\n  if (input.value.length === 0) {\r\n    inputStyles(true, input, text, \"Это поле является обязательным для заполнения!\")\r\n  } else if (input.type === \"tel\") {\r\n    if (!telReg.test(input.value)) {\r\n      inputStyles(true, input, text, \"Введите корректный номер телефона\")\r\n    }\r\n  } else {\r\n    inputStyles(false, input, text)\r\n  }\r\n}\r\n\r\nconst onCheckboxChange = (checkbox, text) => {\r\n  if (!checkbox.checked) {\r\n    checkbox.nextElementSibling.style.border = \"1px solid #FF0000\"\r\n    text.style.display = \"block\"\r\n    text.textContent = \"Для продолжения Вы должны дать согласие на обработку персональных данных\"\r\n  } else {\r\n    checkbox.nextElementSibling.style.border = \"\"\r\n    text.textContent = \"\"\r\n    text.style.display = \"\"\r\n  }\r\n}\r\n\r\nconst onEmptyInputChange = (input, text) => {\r\n  if (input.type === \"tel\" && !telReg.test(input.value)) {\r\n    inputStyles(true, input, text, \"Введите корректный номер телефона\")\r\n  } else {\r\n    inputStyles(false, input, text)\r\n  }\r\n}\r\n\r\nname1.addEventListener(\"blur\", function(e) {\r\n  onEmptyInputBlur(e.target, name1Error)\r\n})\r\n\r\nname1.addEventListener(\"input\", function(e) {\r\n  onEmptyInputChange(e.target, name1Error)\r\n})\r\n\r\ntel1.addEventListener(\"blur\", function(e) {\r\n  onEmptyInputBlur(e.target, tel1Error)\r\n})\r\n\r\ntel1.addEventListener(\"input\", function(e) {\r\n  onEmptyInputChange(e.target, tel1Error)\r\n})\r\n\r\ncheckbox1.addEventListener(\"change\", function(e) {\r\n  onCheckboxChange(e.target, checkbox1Error)\r\n})\r\n\r\nname2.addEventListener(\"blur\", function(e) {\r\n  onEmptyInputBlur(e.target, name2Error)\r\n})\r\n\r\nname2.addEventListener(\"input\", function(e) {\r\n  onEmptyInputChange(e.target, name2Error)\r\n})\r\n\r\ntel2.addEventListener(\"blur\", function(e) {\r\n  onEmptyInputBlur(e.target, tel2Error)\r\n})\r\n\r\ntel2.addEventListener(\"input\", function(e) {\r\n  onEmptyInputChange(e.target, tel2Error)\r\n})\r\n\r\ncheckbox2.addEventListener(\"change\", function(e) {\r\n  onCheckboxChange(e.target, checkbox2Error)\r\n})\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/assets/js/main.js"]();
/******/ 	
/******/ })()
;