/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/js/main.js":
/*!*******************************!*\
  !*** ./src/assets/js/main.js ***!
  \*******************************/
/***/ (function() {

eval("document.addEventListener(\"DOMContentLoaded\", () => {\r\n  const galleryBtnsWrapper = document.querySelector(\".gallery__btns-wrapper\")\r\n  const galleryBtnMore = document.querySelector(\".gallery__btn-more\")\r\n  const galleryBtnHide = document.querySelector(\".gallery__btn-hide\")\r\n  const galleryGrid = document.querySelectorAll(\".gallery__grid\")\r\n  \r\n  let count1 = 1\r\n  if (count1 < galleryGrid.length) {\r\n    galleryBtnMore.addEventListener('click', () => {\r\n      galleryGrid[count1].style.display = \"grid\";\r\n      count1++;\r\n      if (galleryGrid.length === count1) {\r\n        galleryBtnMore.style.display = \"none\"\r\n        galleryBtnHide.style.display = \"block\"\r\n      }\r\n    });\r\n  \r\n    galleryBtnHide.addEventListener('click', () => {\r\n      galleryGrid.forEach(item => {\r\n        item.style.display = \"\"\r\n      })\r\n      galleryBtnMore.style.display = \"\"\r\n      galleryBtnHide.style.display = \"\"\r\n      count1 = 1\r\n    })\r\n  } else {\r\n    galleryBtnsWrapper.style.display = \"none\"\r\n  }\r\n\r\n  const certificatesBtnsWrapper = document.querySelector(\".certificates__btns-wrapper\")\r\n  const certificatesBtnMore = document.querySelector(\".certificates__btn-more\")\r\n  const certificatesBtnHide = document.querySelector(\".certificates__btn-hide\")\r\n  const certificatesGrid = document.querySelectorAll(\".certificates__grid\")\r\n\r\n  if (window.innerWidth > 1300) {\r\n    let count2 = 2\r\n    if (count2 < certificatesGrid.length) {\r\n      certificatesBtnMore.addEventListener('click', () => {\r\n        certificatesGrid[count2].style.display = \"grid\";\r\n        count2++;\r\n        if (certificatesGrid.length === count2) {\r\n          certificatesBtnMore.style.display = \"none\"\r\n          certificatesBtnHide.style.display = \"block\"\r\n        }\r\n      });\r\n  \r\n      certificatesBtnHide.addEventListener('click', () => {\r\n        certificatesGrid.forEach(item => {\r\n          item.style.display = \"\"\r\n        })\r\n        certificatesBtnMore.style.display = \"\"\r\n        certificatesBtnHide.style.display = \"\"\r\n        count2 = 2\r\n      })\r\n    } else {\r\n      certificatesBtnsWrapper.style.display = \"none\"\r\n    }\r\n    \r\n  }\r\n})\r\n\r\nconst swiper1 = new Swiper('.banner__swiper', {\r\n  effect: 'fade',\r\n  slidesPerView: 1,\r\n  loop: true,\r\n  simulateTouch: false,\r\n  autoplay: {\r\n    delay: 4000,\r\n  },\r\n  speed: 1000,\r\n  pagination: {\r\n    el: \".banner__swiper-pagination\",\r\n    clickable: true,\r\n    renderBullet: function (index, className) {\r\n      return `<span class=\"${className}\"></span>`;\r\n    },\r\n  },\r\n});\r\n\r\nconst swiper2 = new Swiper('.testimonial__swiper', {\r\n  slidesPerView: 5,\r\n  spaceBetween: 30,\r\n  simulateTouch: false,\r\n  autoplay: {\r\n    delay: 5000,\r\n  },\r\n  pagination: {\r\n    el: \".testimonial__swiper-pagination\",\r\n    clickable: true,\r\n    renderBullet: function (index, className) {\r\n      return `<span class=\"${className}\"></span>`;\r\n    },\r\n  },\r\n  navigation: {\r\n    nextEl: \".testimonial__swiper-button-next\",\r\n    prevEl: \".testimonial__swiper-button-prev\",\r\n  },\r\n});\r\n\r\nconst overflowToggle = (arg) => {\r\n  if (arg) {\r\n    document.documentElement.style.overflow = \"hidden auto\"\r\n    document.body.style.overflow = \"hidden auto\"\r\n  } else {\r\n    document.documentElement.style.overflow = \"hidden\"\r\n    document.body.style.overflow = \"hidden\"\r\n  }\r\n}\r\n\r\nconst popUpOpen = (window, wrapper, overlay) => {\r\n  overflowToggle(false)\r\n  window.style.display = \"block\"\r\n\r\n  setTimeout(() => {\r\n    overlay.style.opacity = \".5\"\r\n    wrapper.style.opacity = \"1\"\r\n    wrapper.style.top = \"50%\"\r\n  },0)\r\n}\r\n\r\nconst popUpClose = (window, wrapper, overlay) => {\r\n  window.style.display = \"\"\r\n  overlay.style.opacity = \"\"\r\n  wrapper.style.opacity = \"\"\r\n  wrapper.style.top = \"\"\r\n\r\n  overflowToggle(true)\r\n}\r\n\r\nconst setPopUpVisibility = (visibility, window, wrapper, overlay) => {\r\n  if (visibility) {\r\n    popUpOpen(window, wrapper, overlay)\r\n  } else {\r\n    popUpClose(window, wrapper, overlay)\r\n  }\r\n}\r\n\r\nconst popupView = document.querySelector(\".popup-view\")\r\nconst popupViewImg = document.querySelector(\".popup-view__img\")\r\nconst overlayView = document.querySelector(\".popup-view__overlay\")\r\n\r\ndocument.querySelectorAll(\".gallery__grid-item\").forEach(item => {\r\n  item.addEventListener(\"click\", () => {\r\n    const imgSrs = item.firstElementChild.src\r\n    const img = document.querySelector(\".popup-view__img\")\r\n    img.src = imgSrs.replace(\".jpg\", \"-large.jpg\")\r\n    setPopUpVisibility(true, popupView, popupViewImg, overlayView)\r\n  })\r\n})\r\n\r\ndocument.querySelectorAll(\".certificates__grid-item\").forEach(item => {\r\n  item.addEventListener(\"click\", () => {\r\n    const imgSrs = item.firstElementChild.src\r\n    const img = document.querySelector(\".popup-view__img\")\r\n    img.src = imgSrs.replace(\".jpg\", \"-large.jpg\")\r\n    setPopUpVisibility(true, popupView, popupViewImg, overlayView)\r\n  })\r\n})\r\n\r\ndocument.querySelectorAll(\".testimonial__img-wrapper\").forEach(item => {\r\n  item.addEventListener(\"click\", () => {\r\n    const imgSrs = item.firstElementChild.src\r\n    const img = document.querySelector(\".popup-view__img\")\r\n    img.src = imgSrs.replace(\".jpg\", \"-large.jpg\")\r\n    setPopUpVisibility(true, popupView, popupViewImg, overlayView)\r\n  })\r\n})\r\n\r\ndocument.querySelector(\".popup-view__close\").addEventListener(\"click\", () => setPopUpVisibility(false, popupView, popupViewImg, overlayView))\r\noverlayView.addEventListener(\"click\", () => setPopUpVisibility(false, popupView, popupViewImg, overlayView))\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/main.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/assets/js/main.js"]();
/******/ 	
/******/ })()
;